{
  "hash": "01861951ab3c50446a7042e0e7da6ac4",
  "result": {
    "markdown": "---\ntitle: \"The Cat's Meow: Tracking Outdoor Cat Movement over Time\"\nsubtitle: \"Final Project / MATH241 / Spring 2024\"\nauthor: \"Team Cat, aka Sydney Stitt\"\ntitle-slide-attributes:\n  data-slide-number: none\nformat: revealjs\neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n# So, What is a Cat?\n\n![This is cat, his name is **Moony**. He is the most spoiled, silly cat out there!](Images/914C34C0-E533-4D61-80B9-1A3BD8208928.jpg){fig-align=\"center\"}\n\n# Data\n\n-   Two datasets\n\n    -   **cat_us**: GPS coordinates & timestamps of 140+ cats from the United States from 2013-2016\n\n    -   **cat_us_reference**: metadata on individual cat lifestyles (sex, age, diet, hunting, number of cat siblings) and data collection metadata\n\n-   Data collected by volunteer cat owners from 12 geographically diverse US states\n\n-   Initially used to analyze the **ecological impacts** of outdoor cats\n\n# Research Question\n\n1.  Do younger cats tend to travel longer distances than older cats?\n\n2.  Do cats travel in patterns or \"seemingly\" randomly (based on environmental stimulus or reactions)?\n\n# Data Wrangling\n\n659,770 observations into 62,543 observations! How did I do it?\n\n1.  Remove cats with **NA metadata observations** (not super useful without metadata) or locations outside the US\n\n2.  Remove **unnecessary variables** and tidy up observations (time stamps and comments)\n\n3.  Remove **outliers** (manually and algorithm marked)\n\n## This is Getting Messy! Calculating Distance!\n\n1.  Create a function that calculates the distance between two sets of coordinates into a new variable using the **Haversine formula**\n\n2.  Create individual datasets for each cat\n\n3.  Apply Haversine function to calculate distances for each cat\n\n4.  Take the averages of distances per day, per 3 minute observation cycle, per cat, and per age group for comparison\n\n## Coding...\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Tidying up the date and time variables in both dataframes\ncat_movement <- cat_movement %>% \n  mutate(Time = format(as.POSIXct(timestamp), \n                       format = \"%H:%M:%S\"),\n         Date = as.Date(timestamp)) %>%\n  filter(visible) %>%\n  subset(select = -timestamp)\ncat_reference <- cat_reference %>%\n  mutate(`Date-Deploy-On` = as.Date(`deploy-on-date`),\n         `Time-Deploy-On` = format(as.POSIXct(`deploy-on-date`), \n                                   format = \"%H:%M:%S\"),\n         `Date-Deploy-Off` = as.Date(`deploy-off-date`),\n         `Time-Deploy-Off` = format(as.POSIXct(`deploy-off-date`), \n                                    format = \"%H:%M:%S\")) %>%\n  subset(select = -`deploy-off-date`) %>%\n  subset(select = -`deploy-on-date`)\n#ordering data alphabetically by animal id\ncat_reference <- cat_reference[order(cat_reference$`animal-id`), ] \n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Haversine Distance Function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom distance function using Haversine formula to convert coordinates to distance\nhaversine_distance <- function(lon1, lat1, lon2, lat2) {\n  lon1_rad <- lon1 * pi / 180\n  lat1_rad <- lat1 * pi / 180\n  lon2_rad <- lon2 * pi / 180\n  lat2_rad <- lat2 * pi / 180\n  # Earth radius in kilometers\n  R <- 6371\n  # Haversine formula\n  dlon <- lon2_rad - lon1_rad\n  dlat <- lat2_rad - lat1_rad\n  a <- sin(dlat/2)^2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon/2)^2\n  c <- 2 * atan2(sqrt(a), sqrt(1-a))\n  distance <- R * c\n  return(distance)\n}\n\n# Function to calculate distances and convert to meters\ncalculate_distances <- function(data) {\n  distance <- haversine_distance(data$`location-long`[-nrow(data)], data$`location-lat`[-nrow(data)], \n                                  data$`location-long`[-1], data$`location-lat`[-1])\n  distance <- c(NA, distance)  # Add NA to match the size of the original data frame\n  data <- mutate(data, distance = distance)\n  return(data)\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## More Coding! Wrangling and Tidying Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#convert distance from Km to m\nadjusted_cat_distance <- adjusted_cat_distance %>%\n  mutate(distance = distance*1000)\n#Disable scientific notation\noptions(scipen = 999)\n#Creating variables for average distances per 3 minute cycle and per day\nsummaries_by_day <- adjusted_cat_distance %>%\n  filter(distance <= 1000) %>%\n  group_by(`individual-local-identifier`, Date) %>%\n  summarize(mean_distance = mean(distance, \n                                 na.rm = TRUE),\n            sum_distance = sum(distance, \n                               na.rm = TRUE))\n\n#Creating variables for averages for each cat\nsummaries_by_cat <- summaries_by_day %>%\n  group_by(`individual-local-identifier`) %>%\n  summarize(mean_distance_obs = mean(mean_distance),\n            avg_distance_day = mean(sum_distance)) \n\ncat_reference <- cat_reference %>%\n  filter(!is.na(`animal-life-stage`)) %>%\n  filter(`animal-id` != \"Banjo2\") %>%\n  filter(`animal-id` != \"Boris2\") %>%\n  filter(`animal-id` != \"Rocky\") %>%\n  filter(`animal-id` != \"Striper2\") %>%\n  filter(`animal-id` != \"Ziggy\") \n\n#Binding the reference cat dataset with their average distances per cycle and per day, removing any cat with no age listed\nmerged_summaries_by_cat <- cbind(summaries_by_cat, \n                                 cat_reference) \n\n#Tidying up the life stage variable by removing \"years\" in each observations\nmerged_summaries_by_cat$`animal-life-stage` <- gsub(\" years\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\nmerged_summaries_by_cat$`animal-life-stage` <- gsub(\" year\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\n\n#Tidying up the animal comments variable by separating it into two variables for hunting and prey per month\nmerged_summaries_by_cat <- cbind(merged_summaries_by_cat, \n                                 do.call(rbind, \n                                         strsplit(merged_summaries_by_cat$`animal-comments`, \n                                                  \"; \", \n                                                  fixed = TRUE)))\nmerged_summaries_by_cat <- merged_summaries_by_cat %>%\n  subset(select = -`3`) %>%\n  rename(`Hunt` = `1`,\n         `prey_p_month` = `2`)\nmerged_summaries_by_cat$hunt <- ifelse(grepl(\"Yes\", \n                                             merged_summaries_by_cat$Hunt), \n                                       TRUE, FALSE)\nmerged_summaries_by_cat$prey_p_month <- as.numeric(gsub(\"prey_p_month: \", \n                                                        \"\", \n                                                        merged_summaries_by_cat$prey_p_month))\n\n#Tidying up the manipulation comments variable by separating it into two variables for hours spent indoors and number of cats in the household \nmerged_summaries_by_cat <- cbind(merged_summaries_by_cat, do.call(rbind, strsplit(trimws(merged_summaries_by_cat$`manipulation-comments`), \";\", fixed = TRUE)))\nmerged_summaries_by_cat <- merged_summaries_by_cat %>%\n  subset(select = -`3`) %>%\n  rename(`hrs_indoors` = `1`,\n         `n_cats_household` = `2`)\nmerged_summaries_by_cat$hrs_indoors <- as.numeric(gsub(\"hrs_indoors: \", \n                                                       \"\", \n                                                       merged_summaries_by_cat$hrs_indoors))\nmerged_summaries_by_cat$n_cats_household <- as.numeric(gsub(\"n_cats: \", \n                                                            \"\", \n                                                            merged_summaries_by_cat$n_cats_household))\nmerged_summaries_by_cat <- merged_summaries_by_cat %>%\n  mutate(`animal-life-stage` = as.numeric(`animal-life-stage`))\n#Getting rid of unnecessary variables and observations outside the United States\nmerged_summaries_by_cat <- merged_summaries_by_cat %>%\n  subset(select = -`animal-comments`) %>%\n  subset(select = -`manipulation-comments`) %>%\n  subset(select = -`Hunt`) %>%\n  subset(select = -`animal-taxon`) %>%\n  subset(select = -`attachment-type`) %>%\n  subset(select = -`data-processing-software`) %>%\n  subset(select = -`deployment-end-type`) %>%\n  subset(select = -`duty-cycle`) %>%\n  subset(select = -`manipulation-type`) %>%\n  subset(select = -`tag-manufacturer-name`) %>%\n  subset(select = -`tag-mass`) %>%\n  subset(select = -`tag-model`) %>%\n  subset(select = -`tag-readout-method`) %>%\n  filter(`study-site` != \"Denmark\" & `study-site` != \"Newfoundland\")\n```\n:::\n\n\n# Data Visualizations\n\n-   Will eventually make a **Shiny app** to have user customize which cat and which day they want to visualize\n\n-   For now, these are the basic visualizations for what I want the app to produce\n\n## Map 1\n\n::: panel-tabset\n### Function Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Function\nplot_cat_movement <- function(adjusted_cat_distance, cat_identifier, date) {\n  \n  motorcat_cat <- adjusted_cat_distance %>%\n    filter(`individual-local-identifier` == cat_identifier) %>%\n    filter(Date == date) %>%\n    mutate(Time = as.POSIXct(Time, format = \"%H:%M:%S\", tz = \"UTC\")) %>%  # Convert to POSIXct\n    arrange(Time)\n  \n  # Generate title dynamically\n  title <- paste(\"Location Changes Over Time for\", cat_identifier, \"on\", date)\n  \n  ggplot(motorcat_cat, aes(x = `location-long`, y = `location-lat`, group = 1, color = Time)) +\n    geom_path() + \n    geom_point() +\n    scale_color_viridis_c() +\n    geom_text(aes(label = format(Time, \"%H:%M:%S\")), hjust = 1.2, vjust = 0) +  # Add time stamps\n    labs(x = \"Longitude\", y = \"Latitude\", title = title)\n}\n\n# Usage example\nplot_cat_movement(adjusted_cat_distance, \"Motorcat\", \"2013-08-14\")\n```\n:::\n\n\n### Graph Using the Function\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-10-1.png){width=70%}\n:::\n:::\n\n:::\n\n## Map 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-11-1.png){width=70%}\n:::\n:::\n\n\n## Map 3\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-12-1.png){width=70%}\n:::\n:::\n\n\n## Graph 1\n\n::: panel-tabset\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_summaries <- merged_summaries_by_cat %>%\n  group_by(`animal-life-stage`) %>%\n  summarize(avg_dist_day_by_age = mean(avg_distance_day),\n            avg_dist_obs_by_age = mean(mean_distance_obs))\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_day_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats Each Day, \\nGrouped by Age\")\n```\n:::\n\n\n### Comparing Avg Distance per Day\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-14-1.png){width=70%}\n:::\n:::\n\n:::\n\n## Graph 2\n\n::: panel-tabset\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_summaries <- merged_summaries_by_cat %>%\n  group_by(`animal-life-stage`) %>%\n  summarize(avg_dist_day_by_age = mean(avg_distance_day),\n            avg_dist_obs_by_age = mean(mean_distance_obs))\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_obs_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats per 3-Min Cycle, \\nGrouped by Age\")\n```\n:::\n\n\n### Comparing Avg Distance per Obs. Cycle\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/unnamed-chunk-16-1.png){width=70%}\n:::\n:::\n\n:::\n\n# Data Analysis\n\n-   Age is a strong factor in a cat's ability to travel distances per day\n\n    -   Cats aged 10-15 in this dataset travel further than cats younger than 10\n\n-   Age is not an strong factor in a cat's ability to travel distances per 3 minute cycle\n\n    -   Younger cats travel, on average, slightly further distances\n\n# Data Analysis\n\n-   Cats, for the most part, stay **clustered** in one area and often return to one specific **\"hub\"**\n\n    -   Reasonable assumption that this is their home, and they are **emotionally and physically attached** to their home and their owner\n\n# Caveats/Limitations\n\n-   Timestamp labels on travel maps can be hard to read, hopefully fixed with Shiny app\n\n-   Cats don't travel in straight lines\n\n    -   Observations calculated every 3 minutes, so the *distance* variable isn't completely accurate to the total distance traveled\n    -   3 minutes is a relatively good interval, but cats don't move in a 2D linear fashion and often move back and forth and up and down\n\n-   Not all cats have the same number of days observed\n\n# Further Research\n\n-   Observational data **cannot be used to draw causal conclusions**\n\n    -   So not representative of all cat behaviors!\n\n-   Future **experimental** studies with more robust design to see whether age affects a cat's likelihood of moving further distances\n\n-   Future **psychological** studies to see what impacts a cat's movement decisions\n\n# Citations\n\n-   Kays R, Dunn RR, Parsons AW, Mcdonald B, Perkins T, Powers S, Shell L, McDonald JL, Cole H, Kikillus H, Woods L, Tindle H, Roetman P (2020) The small home ranges and large local ecological impacts of pet cats. Animal Conservation. [doi:10.1111/acv.12563](http://dx.doi.org/10.1111/acv.12563)\n\n# Thank you for listening! Any questions?\n\n![This is also a cat! Her name is Cali.](Images/IMG_1625.jpg){fig-align=\"center\"}\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}