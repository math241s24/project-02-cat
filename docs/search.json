[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "",
    "text": "This project was developed by Sydney Stitt For MATH/STAT241 at Reed College. The team is comprised of the following team members.\nSydney Stitt"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "",
    "text": "library(tidyverse)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(tmap)\nlibrary(shiny)\nlibrary(lubridate)"
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Dataset",
    "text": "Dataset\n\n## read data \ncat_movement &lt;- read_csv(\"data/cats_us.csv\")\ncat_reference &lt;- read_csv(\"data/cats_us_reference.csv\")\nprint(dim(cat_movement))\n\n[1] 659770     15\n\nprint(dim(cat_reference))\n\n[1] 154  21\n\nsave(cat_movement, file = \"cat_movement.RData\")\nsave(cat_reference, file = \"cat_reference.RData\")"
  },
  {
    "objectID": "proposal.html#reason-for-choosing-this-dataset",
    "href": "proposal.html#reason-for-choosing-this-dataset",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Reason for Choosing this Dataset",
    "text": "Reason for Choosing this Dataset\nGoals and Motivation:\nI am curious in exploring what variables (such as age, diet, hunting, hours spent indoors, or sex) affect a cat’s decision to travel far outside. I have had cats all my life, and my cat loves to go on walks inside. I am personally curious to see if similar cats to him (young male cats) also like to go outside and explore. The goal of this project is to create a spatial temporal interactive map of cat movement and identify any variables that may impact a cat movement.\nData Information:\nI am using two TidyTuesday datasets collected by volunteer cat owners in the United States for zoologists Roland Kays et al.’s study from 2013 to 2017. Kays et al. published this data in their 2020 paper studying the ecological impacts and outdoor ranges of pet cats (cited below). Cat owners collected data via collar GPS on their cats as they explored outside. The dataset cat_movement has observations of individual cat’s longitude and latitude as well as time stamps for their movements collected from 2013 to 2016. cat_movement has 659770 observations across 15 variables, each observation representing a sensor movement detected by the cat’s GPS. The dataset cat_reference has data on the 154 American cats that were tracked, with 154 observations representing each individual cat across 21 variables such as sex, age, diet, and time spent indoors.\nPaper/Data Citation:\nKays R, Dunn RR, Parsons AW, Mcdonald B, Perkins T, Powers S, Shell L, McDonald JL, Cole H, Kikillus H, Woods L, Tindle H, Roetman P (2020) The small home ranges and large local ecological impacts of pet cats. Animal Conservation. doi:10.1111/acv.12563"
  },
  {
    "objectID": "proposal.html#questions-and-analysis-plan",
    "href": "proposal.html#questions-and-analysis-plan",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Questions and Analysis Plan",
    "text": "Questions and Analysis Plan\nI plan to address the following questions with my project:\n\nDo younger cats tend to travel longer distances and spend more time outside than older cats?\nDo cats travel in patterns or “seemingly” randomly (based on environmental stimulus or reactions)?\n\nAnalysis Plan:\nWeek 4 (4/8 - 4/14) Clean data and tidy observations with tidyverse, dplyr, and readr. I will need to specifically separate the date and time observations using lubridate. Merge the reference and movement data together, or determine if the project can be done with the datasets separate. Conduct peer review of another group’s project proposal.\nWeek 5 (4/15 - 4/21) Incorporate proposal feedback into a reformed proposal. Start working on practice static graphs to help visualize what the final model will look like with ggplot2, sf, or tmap packages. Start on a shiny app to create an interactive map using the shiny package. Create summary statistics to help contextualize the map using dplyr, or create a function within the app to interactively generate summary statistics.\nWeek 6 (4/22 - 4/26) Clean up the app. Present the project with a Quarto presentation! Get preliminary feedback from Adrien.\nWeek 7-8 (4/27 - 5/9) Incorporate Adrien’s feedback and submit the final writeup. Tidy the website.\nProject Organization:\nThe repository is organized by the following folders and files\n\n/data/*: Data folder\n\nf/data/*cat_movement.RData: Cat movement data in rda format\nf/data/*cat_reference.RData: Cat reference data in rda format\nf/data/*cat_movement.csv: Cat movement data in csv format\nf/data/*cat_reference.csv: Cat reference data in csv format\nf``/data/README.md: Metadata about the datasets\n\nindex.qmd: The project write-up\nabout.qmd: Basic information about the project\nproposal.qmd: The project proposal\npresentation.qmd: The project presentation, as given to Reed College’s Data Science course\n_quarto.yml: Setup file for project website\n/catsmeow/*: Folder for interactive Shiny app\n\nf/catsmeow/app.R: The code for the Shiny app\nf/catsmeow/README.md: Metadata about the Shiny app\n\npractice.code.Rmd: Practice code in R Markdown format for data wrangling and experimenting with data visualizations\n\n\n\nstyles.css: File for managing aesthetic/stylistic choices on the website\n\n\n\n/Images/*: Folder for images used in presentation\n\nf/Images/914C34C0-E533-4D61-80B9-1A3BD8208928.jpg: Image of my cat Moony\nf/Images/IMG_1625.jpg: Image of my cat Cali\nf/Images/README.md: Metadata about the images"
  },
  {
    "objectID": "presentation.html",
    "href": "presentation.html",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "",
    "text": "This is cat, his name is Moony. He is the most spoiled, silly cat out there!"
  },
  {
    "objectID": "presentation.html#this-is-getting-messy-calculating-distance",
    "href": "presentation.html#this-is-getting-messy-calculating-distance",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "This is Getting Messy! Calculating Distance!",
    "text": "This is Getting Messy! Calculating Distance!\n\nCreate a function that calculates the distance between two sets of coordinates into a new variable using the Haversine formula\nCreate individual datasets for each cat\nApply Haversine function to calculate distances for each cat\nTake the averages of distances per day, per 3 minute observation cycle, per cat, and per age group for comparison"
  },
  {
    "objectID": "presentation.html#coding",
    "href": "presentation.html#coding",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Coding…",
    "text": "Coding…\n\n#Tidying up the date and time variables in both dataframes\ncat_movement &lt;- cat_movement %&gt;% \n  mutate(Time = format(as.POSIXct(timestamp), \n                       format = \"%H:%M:%S\"),\n         Date = as.Date(timestamp)) %&gt;%\n  filter(visible) %&gt;%\n  subset(select = -timestamp)\ncat_reference &lt;- cat_reference %&gt;%\n  mutate(`Date-Deploy-On` = as.Date(`deploy-on-date`),\n         `Time-Deploy-On` = format(as.POSIXct(`deploy-on-date`), \n                                   format = \"%H:%M:%S\"),\n         `Date-Deploy-Off` = as.Date(`deploy-off-date`),\n         `Time-Deploy-Off` = format(as.POSIXct(`deploy-off-date`), \n                                    format = \"%H:%M:%S\")) %&gt;%\n  subset(select = -`deploy-off-date`) %&gt;%\n  subset(select = -`deploy-on-date`)\n#ordering data alphabetically by animal id\ncat_reference &lt;- cat_reference[order(cat_reference$`animal-id`), ]"
  },
  {
    "objectID": "presentation.html#haversine-distance-function",
    "href": "presentation.html#haversine-distance-function",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Haversine Distance Function",
    "text": "Haversine Distance Function\n\n# Custom distance function using Haversine formula to convert coordinates to distance\nhaversine_distance &lt;- function(lon1, lat1, lon2, lat2) {\n  lon1_rad &lt;- lon1 * pi / 180\n  lat1_rad &lt;- lat1 * pi / 180\n  lon2_rad &lt;- lon2 * pi / 180\n  lat2_rad &lt;- lat2 * pi / 180\n  # Earth radius in kilometers\n  R &lt;- 6371\n  # Haversine formula\n  dlon &lt;- lon2_rad - lon1_rad\n  dlat &lt;- lat2_rad - lat1_rad\n  a &lt;- sin(dlat/2)^2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon/2)^2\n  c &lt;- 2 * atan2(sqrt(a), sqrt(1-a))\n  distance &lt;- R * c\n  return(distance)\n}\n\n# Function to calculate distances and convert to meters\ncalculate_distances &lt;- function(data) {\n  distance &lt;- haversine_distance(data$`location-long`[-nrow(data)], data$`location-lat`[-nrow(data)], \n                                  data$`location-long`[-1], data$`location-lat`[-1])\n  distance &lt;- c(NA, distance)  # Add NA to match the size of the original data frame\n  data &lt;- mutate(data, distance = distance)\n  return(data)\n}"
  },
  {
    "objectID": "presentation.html#more-coding-wrangling-and-tidying-data",
    "href": "presentation.html#more-coding-wrangling-and-tidying-data",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "More Coding! Wrangling and Tidying Data",
    "text": "More Coding! Wrangling and Tidying Data\n\n#convert distance from Km to m\nadjusted_cat_distance &lt;- adjusted_cat_distance %&gt;%\n  mutate(distance = distance*1000)\n#Disable scientific notation\noptions(scipen = 999)\n#Creating variables for average distances per 3 minute cycle and per day\nsummaries_by_day &lt;- adjusted_cat_distance %&gt;%\n  filter(distance &lt;= 1000) %&gt;%\n  group_by(`individual-local-identifier`, Date) %&gt;%\n  summarize(mean_distance = mean(distance, \n                                 na.rm = TRUE),\n            sum_distance = sum(distance, \n                               na.rm = TRUE))\n\n#Creating variables for averages for each cat\nsummaries_by_cat &lt;- summaries_by_day %&gt;%\n  group_by(`individual-local-identifier`) %&gt;%\n  summarize(mean_distance_obs = mean(mean_distance),\n            avg_distance_day = mean(sum_distance)) \n\ncat_reference &lt;- cat_reference %&gt;%\n  filter(!is.na(`animal-life-stage`)) %&gt;%\n  filter(`animal-id` != \"Banjo2\") %&gt;%\n  filter(`animal-id` != \"Boris2\") %&gt;%\n  filter(`animal-id` != \"Rocky\") %&gt;%\n  filter(`animal-id` != \"Striper2\") %&gt;%\n  filter(`animal-id` != \"Ziggy\") \n\n#Binding the reference cat dataset with their average distances per cycle and per day, removing any cat with no age listed\nmerged_summaries_by_cat &lt;- cbind(summaries_by_cat, \n                                 cat_reference) \n\n#Tidying up the life stage variable by removing \"years\" in each observations\nmerged_summaries_by_cat$`animal-life-stage` &lt;- gsub(\" years\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\nmerged_summaries_by_cat$`animal-life-stage` &lt;- gsub(\" year\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\n\n#Tidying up the animal comments variable by separating it into two variables for hunting and prey per month\nmerged_summaries_by_cat &lt;- cbind(merged_summaries_by_cat, \n                                 do.call(rbind, \n                                         strsplit(merged_summaries_by_cat$`animal-comments`, \n                                                  \"; \", \n                                                  fixed = TRUE)))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`3`) %&gt;%\n  rename(`Hunt` = `1`,\n         `prey_p_month` = `2`)\nmerged_summaries_by_cat$hunt &lt;- ifelse(grepl(\"Yes\", \n                                             merged_summaries_by_cat$Hunt), \n                                       TRUE, FALSE)\nmerged_summaries_by_cat$prey_p_month &lt;- as.numeric(gsub(\"prey_p_month: \", \n                                                        \"\", \n                                                        merged_summaries_by_cat$prey_p_month))\n\n#Tidying up the manipulation comments variable by separating it into two variables for hours spent indoors and number of cats in the household \nmerged_summaries_by_cat &lt;- cbind(merged_summaries_by_cat, do.call(rbind, strsplit(trimws(merged_summaries_by_cat$`manipulation-comments`), \";\", fixed = TRUE)))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`3`) %&gt;%\n  rename(`hrs_indoors` = `1`,\n         `n_cats_household` = `2`)\nmerged_summaries_by_cat$hrs_indoors &lt;- as.numeric(gsub(\"hrs_indoors: \", \n                                                       \"\", \n                                                       merged_summaries_by_cat$hrs_indoors))\nmerged_summaries_by_cat$n_cats_household &lt;- as.numeric(gsub(\"n_cats: \", \n                                                            \"\", \n                                                            merged_summaries_by_cat$n_cats_household))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  mutate(`animal-life-stage` = as.numeric(`animal-life-stage`))\n#Getting rid of unnecessary variables and observations outside the United States\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`animal-comments`) %&gt;%\n  subset(select = -`manipulation-comments`) %&gt;%\n  subset(select = -`Hunt`) %&gt;%\n  subset(select = -`animal-taxon`) %&gt;%\n  subset(select = -`attachment-type`) %&gt;%\n  subset(select = -`data-processing-software`) %&gt;%\n  subset(select = -`deployment-end-type`) %&gt;%\n  subset(select = -`duty-cycle`) %&gt;%\n  subset(select = -`manipulation-type`) %&gt;%\n  subset(select = -`tag-manufacturer-name`) %&gt;%\n  subset(select = -`tag-mass`) %&gt;%\n  subset(select = -`tag-model`) %&gt;%\n  subset(select = -`tag-readout-method`) %&gt;%\n  filter(`study-site` != \"Denmark\" & `study-site` != \"Newfoundland\")"
  },
  {
    "objectID": "presentation.html#map-1",
    "href": "presentation.html#map-1",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Map 1",
    "text": "Map 1\n\nFunction CodeGraph Using the Function\n\n\n\n#Function\nplot_cat_movement &lt;- function(adjusted_cat_distance, cat_identifier, date) {\n  \n  motorcat_cat &lt;- adjusted_cat_distance %&gt;%\n    filter(`individual-local-identifier` == cat_identifier) %&gt;%\n    filter(Date == date) %&gt;%\n    mutate(Time = as.POSIXct(Time, format = \"%H:%M:%S\", tz = \"UTC\")) %&gt;%  # Convert to POSIXct\n    arrange(Time)\n  \n  # Generate title dynamically\n  title &lt;- paste(\"Location Changes Over Time for\", cat_identifier, \"on\", date)\n  \n  ggplot(motorcat_cat, aes(x = `location-long`, y = `location-lat`, group = 1, color = Time)) +\n    geom_path() + \n    geom_point() +\n    scale_color_viridis_c() +\n    geom_text(aes(label = format(Time, \"%H:%M:%S\")), hjust = 1.2, vjust = 0) +  # Add time stamps\n    labs(x = \"Longitude\", y = \"Latitude\", title = title)\n}\n\n# Usage example\nplot_cat_movement(adjusted_cat_distance, \"Motorcat\", \"2013-08-14\")"
  },
  {
    "objectID": "presentation.html#map-2",
    "href": "presentation.html#map-2",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Map 2",
    "text": "Map 2"
  },
  {
    "objectID": "presentation.html#map-3",
    "href": "presentation.html#map-3",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Map 3",
    "text": "Map 3"
  },
  {
    "objectID": "presentation.html#graph-1",
    "href": "presentation.html#graph-1",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Graph 1",
    "text": "Graph 1\n\nCodeComparing Avg Distance per Day\n\n\n\nage_summaries &lt;- merged_summaries_by_cat %&gt;%\n  group_by(`animal-life-stage`) %&gt;%\n  summarize(avg_dist_day_by_age = mean(avg_distance_day),\n            avg_dist_obs_by_age = mean(mean_distance_obs))\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_day_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats Each Day, \\nGrouped by Age\")"
  },
  {
    "objectID": "presentation.html#graph-2",
    "href": "presentation.html#graph-2",
    "title": "The Cat’s Meow: Tracking Outdoor Cat Movement over Time",
    "section": "Graph 2",
    "text": "Graph 2\n\nCodeComparing Avg Distance per Obs. Cycle\n\n\n\nage_summaries &lt;- merged_summaries_by_cat %&gt;%\n  group_by(`animal-life-stage`) %&gt;%\n  summarize(avg_dist_day_by_age = mean(avg_distance_day),\n            avg_dist_obs_by_age = mean(mean_distance_obs))\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_obs_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats per 3-Min Cycle, \\nGrouped by Age\")"
  },
  {
    "objectID": "practicecode.html",
    "href": "practicecode.html",
    "title": "Practice Code",
    "section": "",
    "text": "# Put all necessary libraries here\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(tmap)\nlibrary(shiny)\nlibrary(lubridate)\nlibrary(viridis)\nlibrary(scales)\n\n\n#Pulling data from csv files\ncat_movement &lt;- read_csv(\"data/cats_us.csv\")\ncat_reference &lt;- read_csv(\"data/cats_us_reference.csv\")\n\n\n#Tidying up the date and time variables in both dataframes\ncat_movement &lt;- cat_movement %&gt;% \n  mutate(Time = format(as.POSIXct(timestamp), \n                       format = \"%H:%M:%S\"),\n         Date = as.Date(timestamp)) %&gt;%\n  filter(visible) %&gt;%\n  subset(select = -timestamp)\ncat_reference &lt;- cat_reference %&gt;%\n  mutate(`Date-Deploy-On` = as.Date(`deploy-on-date`),\n         `Time-Deploy-On` = format(as.POSIXct(`deploy-on-date`), \n                                   format = \"%H:%M:%S\"),\n         `Date-Deploy-Off` = as.Date(`deploy-off-date`),\n         `Time-Deploy-Off` = format(as.POSIXct(`deploy-off-date`), \n                                    format = \"%H:%M:%S\")) %&gt;%\n  subset(select = -`deploy-off-date`) %&gt;%\n  subset(select = -`deploy-on-date`)\n#ordering data alphabetically by animal id\ncat_reference &lt;- cat_reference[order(cat_reference$`animal-id`), ]\n\n\n#Separating the movement dataset by cat\nfilter_individual &lt;- function(data, identifier) {\n  filtered_data &lt;- filter(data, `individual-local-identifier` == identifier)\n  return(filtered_data)\n}\nAjax2 &lt;- filter_individual(cat_movement, \"Ajax2\")\nAnubis &lt;- filter_individual(cat_movement, \"Anubis2\")\nAsher2 &lt;- filter_individual(cat_movement, \"Asher2\")\nAsibo2 &lt;- filter_individual(cat_movement, \"Asibo2\")\nAtticus &lt;- filter_individual(cat_movement, \"Atticus\")\nAya2 &lt;- filter_individual(cat_movement, \"Aya2\")\nBabyKitty &lt;- filter_individual(cat_movement, \"Baby Kitty 2\")\nBanjo2 &lt;- filter_individual(cat_movement, \"Banjo2\")\nBean2 &lt;- filter_individual(cat_movement, \"Bean2\")\nBeatle2 &lt;- filter_individual(cat_movement, \"Beatle2\")\nBela2 &lt;- filter_individual(cat_movement, \"Bela2\")\nBella2 &lt;- filter_individual(cat_movement, \"Bella2\")\nBeluga &lt;- filter_individual(cat_movement, \"Beluga\")\nBenny &lt;- filter_individual(cat_movement, \"Benny\")\nBillyWhiskers &lt;- filter_individual(cat_movement, \"Billy Whiskers2\")\nBongo2 &lt;- filter_individual(cat_movement, \"Bongo2\")\nBooBooKitty &lt;- filter_individual(cat_movement, \"BooBooKitty\")\nBoris2 &lt;- filter_individual(cat_movement, \"Boris2\")\nBumbles2 &lt;- filter_individual(cat_movement, \"Bumbles2\")\nCaptainAmerica &lt;- filter_individual(cat_movement, \"Captain America 2\")\nCatMarshall &lt;- filter_individual(cat_movement, \"Cat Marshall\")\nCatnissEverdeen &lt;- filter_individual(cat_movement, \"Catniss Everdeen\")\nCayden2 &lt;- filter_individual(cat_movement, \"Cayden2\")\nCedar2 &lt;- filter_individual(cat_movement, \"Cedar2\")\nChester2 &lt;- filter_individual(cat_movement, \"Chester2\")\nClimber2 &lt;- filter_individual(cat_movement, \"Climber2\")\nCoal &lt;- filter_individual(cat_movement, \"Coal\")\nConan &lt;- filter_individual(cat_movement, \"Conan\")\nDiamond2 &lt;- filter_individual(cat_movement, \"Diamond2\")\nDonCarlos &lt;- filter_individual(cat_movement, \"Don Carlos2\")\nDonaldFluffypants &lt;- filter_individual(cat_movement, \"Donald Fluffypants\")\nDouglas &lt;- filter_individual(cat_movement, \"Douglas\")\nElle &lt;- filter_individual(cat_movement, \"Elle\")\nEmmy2 &lt;- filter_individual(cat_movement, \"Emmy2\")\nFenimoreCooper &lt;- filter_individual(cat_movement, \"Fenimore Cooper2\")\nFiona2 &lt;- filter_individual(cat_movement, \"Fiona2\")\nFletcher2 &lt;- filter_individual(cat_movement, \"Fletcher2\")\nFrank &lt;- filter_individual(cat_movement, \"Frank\")\nFranklin &lt;- filter_individual(cat_movement, \"Franklin\")\nGeorge2 &lt;- filter_individual(cat_movement, \"George2\")\nGianni2 &lt;- filter_individual(cat_movement, \"Gianni2\")\nGoliath2 &lt;- filter_individual(cat_movement, \"Goliath2\")\nGracie &lt;- filter_individual(cat_movement, \"Gracie\")\nGracieL2 &lt;- filter_individual(cat_movement, \"Gracie L2\")\nHailey2 &lt;- filter_individual(cat_movement, \"Hailey2\")\nHarley2 &lt;- filter_individual(cat_movement, \"Harley2\")\nHemingway &lt;- filter_individual(cat_movement, \"Hemingway\")\nHerman2 &lt;- filter_individual(cat_movement, \"Herman2\")\nHershey &lt;- filter_individual(cat_movement, \"Hershey\")\nJack2 &lt;- filter_individual(cat_movement, \"Jack2\")\nJams2 &lt;- filter_individual(cat_movement, \"Jams2\")\nJello2 &lt;- filter_individual(cat_movement, \"Jello2\")\nJetpack &lt;- filter_individual(cat_movement, \"Jetpack\")\nJingles2 &lt;- filter_individual(cat_movement, \"Jingles2\")\nJitterbug2 &lt;- filter_individual(cat_movement, \"Jitterbug2\")\nJoey &lt;- filter_individual(cat_movement, \"Joey\")\nJunior2 &lt;- filter_individual(cat_movement, \"Junior2\")\nJustice &lt;- filter_individual(cat_movement, \"Justice\")\nKagin2 &lt;- filter_individual(cat_movement, \"Kagin2\")\nKatnissEverdeen &lt;- filter_individual(cat_movement, \"Katniss Everdeen\")\nLacey &lt;- filter_individual(cat_movement, \"Lacey\")\nLadybird2 &lt;- filter_individual(cat_movement, \"Ladybird2\")\nLeopard2 &lt;- filter_individual(cat_movement, \"Leopard2\")\nLester &lt;- filter_individual(cat_movement, \"Lester\")\nLittle2 &lt;- filter_individual(cat_movement, \"Little2\")\nLouieTag &lt;- filter_individual(cat_movement, \"LouieTag\")\nLucky2 &lt;- filter_individual(cat_movement, \"Lucky2\")\nLuna2 &lt;- filter_individual(cat_movement, \"Luna2\")\nLupe2 &lt;- filter_individual(cat_movement, \"Lupe2\")\nMaddie2 &lt;- filter_individual(cat_movement, \"Maddie2\")\nMaisey2 &lt;- filter_individual(cat_movement, \"Maisey2\")\nMarco2 &lt;- filter_individual(cat_movement, \"Marco2\")\nMarthaWayne2 &lt;- filter_individual(cat_movement, \"Martha Wayne2\")\nMerrie2 &lt;- filter_individual(cat_movement, \"Merrie2\")\nMia2 &lt;- filter_individual(cat_movement, \"Mia2\")\nMilo &lt;- filter_individual(cat_movement, \"Milo\")\nMindy2 &lt;- filter_individual(cat_movement, \"Mindy2\")\nMinnieH &lt;- filter_individual(cat_movement, \"Minnie H\")\nMisty &lt;- filter_individual(cat_movement, \"Misty\")\nMisu2 &lt;- filter_individual(cat_movement, \"Misu2\")\nMotorcat &lt;- filter_individual(cat_movement, \"Motorcat\")\nMrLucky &lt;- filter_individual(cat_movement, \"Mr.Lucky\")\nNatasha2 &lt;- filter_individual(cat_movement, \"Natasha2\")\nNattyBumpo2 &lt;- filter_individual(cat_movement, \"NattyBumpo2\")\nNia &lt;- filter_individual(cat_movement, \"Nia\")\nNikki2 &lt;- filter_individual(cat_movement, \"Nikki2\")\nNola2Tag &lt;- filter_individual(cat_movement, \"Nola2Tag\")\nOatmeal &lt;- filter_individual(cat_movement, \"Oatmeal\")\nOliver2 &lt;- filter_individual(cat_movement, \"Oliver2\")\nOrange &lt;- filter_individual(cat_movement, \"Orange\")\nOreo2 &lt;- filter_individual(cat_movement, \"Oreo2\")\nOscarJ &lt;- filter_individual(cat_movement, \"Oscar J\")\nOscarL &lt;- filter_individual(cat_movement, \"Oscar L\")\nOscarN &lt;- filter_individual(cat_movement, \"OscarN\")\nParker &lt;- filter_individual(cat_movement, \"Parker\")\nPeanut &lt;- filter_individual(cat_movement, \"Peanut\")\nPeanutR &lt;- filter_individual(cat_movement, \"PeanutR\")\nPenelope2 &lt;- filter_individual(cat_movement, \"Penelope2\")\nPicchu &lt;- filter_individual(cat_movement, \"Picchu\")\nPickles2 &lt;- filter_individual(cat_movement, \"Pickles2\")\nPiper2 &lt;- filter_individual(cat_movement, \"Piper2\")\nPoly &lt;- filter_individual(cat_movement, \"Poly\")\nPringle &lt;- filter_individual(cat_movement, \"Pringle\")\nPsychoKitty &lt;- filter_individual(cat_movement, \"Psycho Kitty2\")\nPumpkinKane &lt;- filter_individual(cat_movement, \"Pumpkin Kane\")\nPumpkin2 &lt;- filter_individual(cat_movement, \"Pumpkin2\")\nPurrcy2 &lt;- filter_individual(cat_movement, \"Purrcy2\")\nReggie2 &lt;- filter_individual(cat_movement, \"Reggie2\")\nRocky &lt;- filter_individual(cat_movement, \"Motorcat\")\nRoukus2 &lt;- filter_individual(cat_movement, \"Roukus2\")\nRussel2 &lt;- filter_individual(cat_movement, \"Russel2\")\nSandstorm2 &lt;- filter_individual(cat_movement, \"Sandstorm2\")\nSasquatch2 &lt;- filter_individual(cat_movement, \"Sasquatch2\")\nSchubie2 &lt;- filter_individual(cat_movement, \"Schubie2\")\nSelkie2 &lt;- filter_individual(cat_movement, \"Selkie2\")\nSenor2 &lt;- filter_individual(cat_movement, \"Senor2\")\nSeth2 &lt;- filter_individual(cat_movement, \"Seth2\")\nShadow2 &lt;- filter_individual(cat_movement, \"Shadow2\")\nShakespeare2 &lt;- filter_individual(cat_movement, \"Shakespeare2\")\nSheldon &lt;- filter_individual(cat_movement, \"Sheldon\")\nSmattie &lt;- filter_individual(cat_movement, \"Smattie\")\nSmokey2 &lt;- filter_individual(cat_movement, \"Smokey2\")\nSnickerdoodle2 &lt;- filter_individual(cat_movement, \"Snickerdoodle2\")\nSolo2 &lt;- filter_individual(cat_movement, \"Solo2\")\nSparkles &lt;- filter_individual(cat_movement, \"Sparkles\")\nSpencer2 &lt;- filter_individual(cat_movement, \"Spencer2\")\nSpike &lt;- filter_individual(cat_movement, \"Spike\")\nStarbuck2 &lt;- filter_individual(cat_movement, \"Starbuck2\")\nStriper2 &lt;- filter_individual(cat_movement, \"Striper2\")\nSunny2 &lt;- filter_individual(cat_movement, \"Sunny2\")\nSurvivor2 &lt;- filter_individual(cat_movement, \"Survivor2\")\nSweetpea &lt;- filter_individual(cat_movement, \"Sweetpea\")\nSylvester &lt;- filter_individual(cat_movement, \"Sylvester\")\nTabasco &lt;- filter_individual(cat_movement, \"Tabasco\")\nTallulah2 &lt;- filter_individual(cat_movement, \"Tallulah2\")\nTara2 &lt;- filter_individual(cat_movement, \"Tara2\")\nTex2 &lt;- filter_individual(cat_movement, \"Tex2\")\nTiger2 &lt;- filter_individual(cat_movement, \"Tiger2\")\nTonka2 &lt;- filter_individual(cat_movement, \"Tonka2\")\nTurtle2 &lt;- filter_individual(cat_movement, \"Turtle2\")\nVioletMae2 &lt;- filter_individual(cat_movement, \"Violet Mae2\")\nWilly2 &lt;- filter_individual(cat_movement, \"Willy2\")\nZelda2 &lt;- filter_individual(cat_movement, \"Zelda2\")\nZiggy &lt;- filter_individual(cat_movement, \"Motorcat\")\nZoey &lt;- filter_individual(cat_movement, \"Zoey\")\nZorro2 &lt;- filter_individual(cat_movement, \"Zorro2\")\n\n\n# Custom distance function using Haversine formula to convert coordinates to distance\nhaversine_distance &lt;- function(lon1, lat1, lon2, lat2) {\n  lon1_rad &lt;- lon1 * pi / 180\n  lat1_rad &lt;- lat1 * pi / 180\n  lon2_rad &lt;- lon2 * pi / 180\n  lat2_rad &lt;- lat2 * pi / 180\n  # Earth radius in kilometers\n  R &lt;- 6371\n  # Haversine formula\n  dlon &lt;- lon2_rad - lon1_rad\n  dlat &lt;- lat2_rad - lat1_rad\n  a &lt;- sin(dlat/2)^2 + cos(lat1_rad) * cos(lat2_rad) * sin(dlon/2)^2\n  c &lt;- 2 * atan2(sqrt(a), sqrt(1-a))\n  distance &lt;- R * c\n  return(distance)\n}\n\n# Function to calculate distances and convert to meters\ncalculate_distances &lt;- function(data) {\n  distance &lt;- haversine_distance(data$`location-long`[-nrow(data)], data$`location-lat`[-nrow(data)], \n                                  data$`location-long`[-1], data$`location-lat`[-1])\n  distance &lt;- c(NA, distance)  # Add NA to match the size of the original data frame\n  data &lt;- mutate(data, distance = distance)\n  return(data)\n}\n\n\n# Applying the function to your data frame\nAjax2 &lt;- calculate_distances(Ajax2)\nAnubis &lt;- calculate_distances(Anubis)\nAsher2 &lt;- calculate_distances(Asher2)\nAsibo2 &lt;- calculate_distances(Asibo2)\nAtticus &lt;- calculate_distances(Atticus)\nAya2 &lt;- calculate_distances(Aya2)\nBabyKitty &lt;- calculate_distances(BabyKitty)\nBean2 &lt;- calculate_distances(Bean2)\nBeatle2 &lt;- calculate_distances(Beatle2)\nBela2 &lt;- calculate_distances(Bela2)\nBella2 &lt;- calculate_distances(Bella2)\nBeluga &lt;- calculate_distances(Beluga)\nBenny &lt;- calculate_distances(Benny)\nBillyWhiskers &lt;- calculate_distances(BillyWhiskers)\nBongo2 &lt;- calculate_distances(Bongo2)\nBooBooKitty &lt;- calculate_distances(BooBooKitty)\nBumbles2 &lt;- calculate_distances(Bumbles2)\nCaptainAmerica &lt;- calculate_distances(CaptainAmerica)\nCatMarshall &lt;- calculate_distances(CatMarshall)\nCatnissEverdeen &lt;- calculate_distances(CatnissEverdeen)\nCayden2 &lt;- calculate_distances(Cayden2)\nCedar2 &lt;- calculate_distances(Cedar2)\nChester2 &lt;- calculate_distances(Chester2)\nClimber2 &lt;- calculate_distances(Climber2)\nCoal &lt;- calculate_distances(Coal)\nConan &lt;- calculate_distances(Conan)\nDiamond2 &lt;- calculate_distances(Diamond2)\nDonCarlos &lt;- calculate_distances(DonCarlos)\nDonaldFluffypants &lt;- calculate_distances(DonaldFluffypants)\nDouglas &lt;- calculate_distances(Douglas)\nElle &lt;- calculate_distances(Elle)\nEmmy2 &lt;- calculate_distances(Emmy2)\nFenimoreCooper &lt;- calculate_distances(FenimoreCooper)\nFiona2 &lt;- calculate_distances(Fiona2)\nFletcher2 &lt;- calculate_distances(Fletcher2)\nFrank &lt;- calculate_distances(Frank)\nFranklin &lt;- calculate_distances(Franklin)\nGeorge2 &lt;- calculate_distances(George2)\nGianni2 &lt;- calculate_distances(Gianni2)\nGoliath2 &lt;- calculate_distances(Goliath2)\nGracie &lt;- calculate_distances(Gracie)\nGracieL2 &lt;- calculate_distances(GracieL2)\nHailey2 &lt;- calculate_distances(Hailey2)\nHarley2 &lt;- calculate_distances(Harley2)\nHemingway &lt;- calculate_distances(Hemingway)\nHerman2 &lt;- calculate_distances(Herman2)\nHershey &lt;- calculate_distances(Hershey)\nJack2 &lt;- calculate_distances(Jack2)\nJams2 &lt;- calculate_distances(Jams2)\nJello2 &lt;- calculate_distances(Jello2)\nJetpack &lt;- calculate_distances(Jetpack)\nJingles2 &lt;- calculate_distances(Jingles2)\nJitterbug2 &lt;- calculate_distances(Jitterbug2)\nJoey &lt;- calculate_distances(Joey)\nJunior2 &lt;- calculate_distances(Junior2)\nJustice &lt;- calculate_distances(Justice)\nKagin2 &lt;- calculate_distances(Kagin2)\nKatnissEverdeen &lt;- calculate_distances(KatnissEverdeen)\nLacey &lt;- calculate_distances(Lacey)\nLadybird2 &lt;- calculate_distances(Ladybird2)\nLeopard2 &lt;- calculate_distances(Leopard2)\nLester &lt;- calculate_distances(Lester)\nLittle2 &lt;- calculate_distances(Little2)\nLouieTag &lt;- calculate_distances(LouieTag)\nLucky2 &lt;- calculate_distances(Lucky2)\nLuna2 &lt;- calculate_distances(Luna2)\nLupe2 &lt;- calculate_distances(Lupe2)\nMaddie2 &lt;- calculate_distances(Maddie2)\nMaisey2 &lt;- calculate_distances(Maisey2)\nMarco2 &lt;- calculate_distances(Marco2)\nMarthaWayne2 &lt;- calculate_distances(MarthaWayne2)\nMerrie2 &lt;- calculate_distances(Merrie2)\nMia2 &lt;- calculate_distances(Mia2)\nMilo &lt;- calculate_distances(Milo)\nMindy2 &lt;- calculate_distances(Mindy2)\nMinnieH &lt;- calculate_distances(MinnieH)\nMisty &lt;- calculate_distances(Misty)\nMisu2 &lt;- calculate_distances(Misu2)\nMotorcat &lt;- calculate_distances(Motorcat)\nMrLucky &lt;- calculate_distances(MrLucky)\nNatasha2 &lt;- calculate_distances(Natasha2)\nNattyBumpo2 &lt;- calculate_distances(NattyBumpo2)\nNia &lt;- calculate_distances(Nia)\nNikki2 &lt;- calculate_distances(Nikki2)\nNola2Tag &lt;- calculate_distances(Nola2Tag)\nOatmeal &lt;- calculate_distances(Oatmeal)\nOliver2 &lt;- calculate_distances(Oliver2)\nOrange &lt;- calculate_distances(Orange)\nOreo2 &lt;- calculate_distances(Oreo2)\nOscarJ &lt;- calculate_distances(OscarJ)\nOscarL &lt;- calculate_distances(OscarL)\nOscarN &lt;- calculate_distances(OscarN)\nParker &lt;- calculate_distances(Parker)\nPeanut &lt;- calculate_distances(Peanut)\nPeanutR &lt;- calculate_distances(PeanutR)\nPenelope2 &lt;- calculate_distances(Penelope2)\nPicchu &lt;- calculate_distances(Picchu)\nPickles2 &lt;- calculate_distances(Pickles2)\nPiper2 &lt;- calculate_distances(Piper2)\nPoly &lt;- calculate_distances(Poly)\nPringle &lt;- calculate_distances(Pringle)\nPsychoKitty &lt;- calculate_distances(PsychoKitty)\nPumpkinKane &lt;- calculate_distances(PumpkinKane)\nPumpkin2 &lt;- calculate_distances(Pumpkin2)\nPurrcy2 &lt;- calculate_distances(Purrcy2)\nReggie2 &lt;- calculate_distances(Reggie2)\nRocky &lt;- calculate_distances(Rocky)\nRoukus2 &lt;- calculate_distances(Roukus2)\nRussel2 &lt;- calculate_distances(Russel2)\nSandstorm2 &lt;- calculate_distances(Sandstorm2)\nSasquatch2 &lt;- calculate_distances(Sasquatch2)\nSchubie2 &lt;- calculate_distances(Schubie2)\nSelkie2 &lt;- calculate_distances(Selkie2)\nSenor2 &lt;- calculate_distances(Senor2)\nSeth2 &lt;- calculate_distances(Seth2)\nShadow2 &lt;- calculate_distances(Shadow2)\nShakespeare2 &lt;- calculate_distances(Shakespeare2)\nSheldon &lt;- calculate_distances(Sheldon)\nSmattie &lt;- calculate_distances(Smattie)\nSmokey2 &lt;- calculate_distances(Smokey2)\nSnickerdoodle2 &lt;- calculate_distances(Snickerdoodle2)\nSolo2 &lt;- calculate_distances(Solo2)\nSparkles &lt;- calculate_distances(Sparkles)\nSpencer2 &lt;- calculate_distances(Spencer2)\nSpike &lt;- calculate_distances(Spike)\nStarbuck2 &lt;- calculate_distances(Starbuck2)\nStriper2 &lt;- calculate_distances(Striper2)\nSunny2 &lt;- calculate_distances(Sunny2)\nSurvivor2 &lt;- calculate_distances(Survivor2)\nSweetpea &lt;- calculate_distances(Sweetpea)\nSylvester &lt;- calculate_distances(Sylvester)\nTabasco &lt;- calculate_distances(Tabasco)\nTallulah2 &lt;- calculate_distances(Tallulah2)\nTara2 &lt;- calculate_distances(Tara2)\nTex2 &lt;- calculate_distances(Tex2)\nTiger2 &lt;- calculate_distances(Tiger2)\nTonka2 &lt;- calculate_distances(Tonka2)\nTurtle2 &lt;- calculate_distances(Turtle2)\nVioletMae2 &lt;- calculate_distances(VioletMae2)\nWilly2 &lt;- calculate_distances(Willy2)\nZelda2 &lt;- calculate_distances(Zelda2)\nZiggy &lt;- calculate_distances(Ziggy)\nZoey &lt;- calculate_distances(Zoey)\nZorro2 &lt;- calculate_distances(Zorro2)\n\n\n#Joining all datasets together\nadjusted_cat_distance &lt;- full_join(Ajax2, Anubis) %&gt;%\n                    full_join(Asher2) %&gt;%\n                    full_join(Asibo2) %&gt;%\n                    full_join(Atticus) %&gt;%\n                    full_join(Aya2) %&gt;%\n                    full_join(BabyKitty) %&gt;%\n                    full_join(Bean2) %&gt;%\n                    full_join(Beatle2) %&gt;%\n                    full_join(Bela2) %&gt;%\n                    full_join(Bella2) %&gt;%\n                    full_join(Beluga) %&gt;%\n                    full_join(Benny) %&gt;%\n                    full_join(BillyWhiskers) %&gt;%\n                    full_join(Bongo2) %&gt;%\n                    full_join(BooBooKitty) %&gt;%\n                    full_join(Bumbles2) %&gt;%\n                    full_join(CaptainAmerica) %&gt;%\n                    full_join(CatMarshall) %&gt;%\n                    full_join(CatnissEverdeen) %&gt;%\n                    full_join(Cayden2) %&gt;%\n                    full_join(Cedar2) %&gt;%\n                    full_join(Chester2) %&gt;%\n                    full_join(Climber2) %&gt;%\n                    full_join(Coal) %&gt;%\n                    full_join(Conan) %&gt;%\n                    full_join(Diamond2) %&gt;%\n                    full_join(DonCarlos) %&gt;%\n                    full_join(DonaldFluffypants) %&gt;%\n                    full_join(Douglas) %&gt;%\n                    full_join(Elle) %&gt;%\n                    full_join(Emmy2) %&gt;%\n                    full_join(FenimoreCooper) %&gt;%\n                    full_join(Fiona2) %&gt;%\n                    full_join(Fletcher2) %&gt;%\n                    full_join(Frank) %&gt;%\n                    full_join(Franklin) %&gt;%\n                    full_join(George2) %&gt;%\n                    full_join(Gianni2) %&gt;%\n                    full_join(Goliath2) %&gt;%\n                    full_join(Gracie) %&gt;%\n                    full_join(GracieL2) %&gt;%\n                    full_join(Hailey2) %&gt;%\n                    full_join(Harley2) %&gt;%\n                    full_join(Hemingway) %&gt;%\n                    full_join(Herman2) %&gt;%\n                    full_join(Hershey) %&gt;%\n                    full_join(Jack2) %&gt;%\n                    full_join(Jams2) %&gt;%\n                    full_join(Jello2) %&gt;%\n                    full_join(Jetpack) %&gt;%\n                    full_join(Jingles2) %&gt;%\n                    full_join(Jitterbug2) %&gt;%\n                    full_join(Joey) %&gt;%\n                    full_join(Junior2) %&gt;%\n                    full_join(Justice) %&gt;%\n                    full_join(Kagin2) %&gt;%\n                    full_join(KatnissEverdeen) %&gt;%\n                    full_join(Lacey) %&gt;%\n                    full_join(Ladybird2) %&gt;%\n                    full_join(Leopard2) %&gt;%\n                    full_join(Lester) %&gt;%\n                    full_join(Little2) %&gt;%\n                    full_join(LouieTag) %&gt;%\n                    full_join(Lucky2) %&gt;%\n                    full_join(Luna2) %&gt;%\n                    full_join(Lupe2) %&gt;%\n                    full_join(Maddie2) %&gt;%\n                    full_join(Maisey2) %&gt;%\n                    full_join(Marco2) %&gt;%\n                    full_join(MarthaWayne2) %&gt;%\n                    full_join(Merrie2) %&gt;%\n                    full_join(Mia2) %&gt;%\n                    full_join(Milo) %&gt;%\n                    full_join(Mindy2) %&gt;%\n                    full_join(MinnieH) %&gt;%\n                    full_join(Misty) %&gt;%\n                    full_join(Misu2) %&gt;%\n                    full_join(Motorcat) %&gt;%\n                    full_join(MrLucky) %&gt;%\n                    full_join(Natasha2) %&gt;%\n                    full_join(NattyBumpo2) %&gt;%\n                    full_join(Nia) %&gt;%\n                    full_join(Nikki2) %&gt;%\n                    full_join(Nola2Tag) %&gt;%\n                    full_join(Oatmeal) %&gt;%\n                    full_join(Oliver2) %&gt;%\n                    full_join(Orange) %&gt;%\n                    full_join(Oreo2) %&gt;%\n                    full_join(OscarJ) %&gt;%\n                    full_join(OscarL) %&gt;%\n                    full_join(OscarN) %&gt;%\n                    full_join(Parker) %&gt;%\n                    full_join(Peanut) %&gt;%\n                    full_join(PeanutR) %&gt;%\n                    full_join(Penelope2) %&gt;%\n                    full_join(Picchu) %&gt;%\n                    full_join(Pickles2) %&gt;%\n                    full_join(Piper2) %&gt;%\n                    full_join(Poly) %&gt;%\n                    full_join(Pringle) %&gt;%\n                    full_join(PsychoKitty) %&gt;%\n                    full_join(PumpkinKane) %&gt;%\n                    full_join(Pumpkin2) %&gt;%\n                    full_join(Purrcy2) %&gt;%\n                    full_join(Reggie2) %&gt;%\n                    full_join(Roukus2) %&gt;%\n                    full_join(Russel2) %&gt;%\n                    full_join(Sandstorm2) %&gt;%\n                    full_join(Sasquatch2) %&gt;%\n                    full_join(Schubie2) %&gt;%\n                    full_join(Selkie2) %&gt;%\n                    full_join(Senor2) %&gt;%\n                    full_join(Seth2) %&gt;%\n                    full_join(Shadow2) %&gt;%\n                    full_join(Shakespeare2) %&gt;%\n                    full_join(Sheldon) %&gt;%\n                    full_join(Smattie) %&gt;%\n                    full_join(Smokey2) %&gt;%\n                    full_join(Snickerdoodle2) %&gt;%\n                    full_join(Solo2) %&gt;%\n                    full_join(Sparkles) %&gt;%\n                    full_join(Spencer2) %&gt;%\n                    full_join(Spike) %&gt;%\n                    full_join(Starbuck2) %&gt;%\n                    full_join(Sunny2) %&gt;%\n                    full_join(Survivor2) %&gt;%\n                    full_join(Sweetpea) %&gt;%\n                    full_join(Sylvester) %&gt;%\n                    full_join(Tabasco) %&gt;%\n                    full_join(Tallulah2) %&gt;%\n                    full_join(Tara2) %&gt;%\n                    full_join(Tex2) %&gt;%\n                    full_join(Tiger2) %&gt;%\n                    full_join(Tonka2) %&gt;%\n                    full_join(Turtle2) %&gt;%\n                    full_join(VioletMae2) %&gt;%\n                    full_join(Willy2) %&gt;%\n                    full_join(Zelda2) %&gt;%\n                    full_join(Zoey) %&gt;%\n                    full_join(Zorro2)\n\n\n#convert distance from Km to m\nadjusted_cat_distance &lt;- adjusted_cat_distance %&gt;%\n  mutate(distance = distance*1000)\n\n\n#Disable scientific notation\noptions(scipen = 999)\n#Creating variables for average distances per 3 minute cycle and per day\nsummaries_by_day &lt;- adjusted_cat_distance %&gt;%\n  filter(distance &lt;= 1000) %&gt;%\n  group_by(`individual-local-identifier`, Date) %&gt;%\n  summarize(mean_distance = mean(distance, \n                                 na.rm = TRUE),\n            sum_distance = sum(distance, \n                               na.rm = TRUE))\n\n#Creating variables for averages for each cat\nsummaries_by_cat &lt;- summaries_by_day %&gt;%\n  group_by(`individual-local-identifier`) %&gt;%\n  summarize(mean_distance_obs = mean(mean_distance),\n            avg_distance_day = mean(sum_distance)) \n\ncat_reference &lt;- cat_reference %&gt;%\n  filter(!is.na(`animal-life-stage`)) %&gt;%\n  filter(`animal-id` != \"Banjo2\") %&gt;%\n  filter(`animal-id` != \"Boris2\") %&gt;%\n  filter(`animal-id` != \"Rocky\") %&gt;%\n  filter(`animal-id` != \"Striper2\") %&gt;%\n  filter(`animal-id` != \"Ziggy\") \n\n#Binding the reference cat dataset with their average distances per cycle and per day, removing any cat with no age listed\nmerged_summaries_by_cat &lt;- cbind(summaries_by_cat, \n                                 cat_reference) \n\n#Tidying up the life stage variable by removing \"years\" in each observations\nmerged_summaries_by_cat$`animal-life-stage` &lt;- gsub(\" years\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\nmerged_summaries_by_cat$`animal-life-stage` &lt;- gsub(\" year\", \n                                                    \"\", \n                                                    merged_summaries_by_cat$`animal-life-stage`)\n\n#Tidying up the animal comments variable by separating it into two variables for hunting and prey per month\nmerged_summaries_by_cat &lt;- cbind(merged_summaries_by_cat, \n                                 do.call(rbind, \n                                         strsplit(merged_summaries_by_cat$`animal-comments`, \n                                                  \"; \", \n                                                  fixed = TRUE)))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`3`) %&gt;%\n  rename(`Hunt` = `1`,\n         `prey_p_month` = `2`)\nmerged_summaries_by_cat$hunt &lt;- ifelse(grepl(\"Yes\", \n                                             merged_summaries_by_cat$Hunt), \n                                       TRUE, FALSE)\nmerged_summaries_by_cat$prey_p_month &lt;- as.numeric(gsub(\"prey_p_month: \", \n                                                        \"\", \n                                                        merged_summaries_by_cat$prey_p_month))\n\n#Tidying up the manipulation comments variable by separating it into two variables for hours spent indoors and number of cats in the household \nmerged_summaries_by_cat &lt;- cbind(merged_summaries_by_cat, do.call(rbind, strsplit(trimws(merged_summaries_by_cat$`manipulation-comments`), \";\", fixed = TRUE)))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`3`) %&gt;%\n  rename(`hrs_indoors` = `1`,\n         `n_cats_household` = `2`)\nmerged_summaries_by_cat$hrs_indoors &lt;- as.numeric(gsub(\"hrs_indoors: \", \n                                                       \"\", \n                                                       merged_summaries_by_cat$hrs_indoors))\nmerged_summaries_by_cat$n_cats_household &lt;- as.numeric(gsub(\"n_cats: \", \n                                                            \"\", \n                                                            merged_summaries_by_cat$n_cats_household))\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  mutate(`animal-life-stage` = as.numeric(`animal-life-stage`))\n\n\n#Getting rid of unnecessary variables and observations outside the United States\nmerged_summaries_by_cat &lt;- merged_summaries_by_cat %&gt;%\n  subset(select = -`animal-comments`) %&gt;%\n  subset(select = -`manipulation-comments`) %&gt;%\n  subset(select = -`Hunt`) %&gt;%\n  subset(select = -`animal-taxon`) %&gt;%\n  subset(select = -`attachment-type`) %&gt;%\n  subset(select = -`data-processing-software`) %&gt;%\n  subset(select = -`deployment-end-type`) %&gt;%\n  subset(select = -`duty-cycle`) %&gt;%\n  subset(select = -`manipulation-type`) %&gt;%\n  subset(select = -`tag-manufacturer-name`) %&gt;%\n  subset(select = -`tag-mass`) %&gt;%\n  subset(select = -`tag-model`) %&gt;%\n  subset(select = -`tag-readout-method`) %&gt;%\n  filter(`study-site` != \"Denmark\" & `study-site` != \"Newfoundland\")\n\n\n# Filter data for the cat named Sparkles on a specific date\nsparkles_cat &lt;- adjusted_cat_distance %&gt;%\n  filter(`individual-local-identifier` == \"Sparkles\") %&gt;%\n  filter(Date == \"2016-03-29\") %&gt;%\n  mutate(Time = hms(Time))  # Convert time to hms format\n\n# Ensure data is sorted by time\nsparkles_cat &lt;- sparkles_cat[order(sparkles_cat$Time), ]\n\n# Create the base ggplot object\nggplot(sparkles_cat, aes(x = `location-long`, y = `location-lat`, group = 1)) +\n  geom_path() + \n  geom_point() + \n  labs(x = \"Longitude\", y = \"Latitude\", title = \"Location Changes Over Time\")\n\n\n\n\n\n\n\n\n\n#Function\nplot_cat_movement &lt;- function(adjusted_cat_distance, cat_identifier, date) {\n  \n  motorcat_cat &lt;- adjusted_cat_distance %&gt;%\n    filter(`individual-local-identifier` == cat_identifier) %&gt;%\n    filter(Date == date) %&gt;%\n    mutate(Time = as.POSIXct(Time, format = \"%H:%M:%S\", tz = \"UTC\")) %&gt;%  # Convert to POSIXct\n    arrange(Time)\n  \n  # Generate title dynamically\ntitle &lt;- paste(\"Location Changes Over Time for\", cat_identifier, \"on\", date)\n  \nggplot(motorcat_cat, aes(x = `location-long`, y = `location-lat`, group = 1, color = Time)) +\n  geom_path() + \n  geom_point() +\n  labs(x = \"Longitude\", y = \"Latitude\", title = title) +\n  scale_color_datetime(\n      name = \"Time\",\n      labels = date_format(\"%H:%M:%S\"),  # Format labels as HH:MM:SS\n      breaks = date_breaks(\"2 hours\"),   # Specify breaks for the time scale\n      limits = range(motorcat_cat$Time) # Set limits based on the range of Time\n    ) \n}\n\n\n\n# Usage example\nplot_cat_movement(adjusted_cat_distance, \"Motorcat\", \"2013-08-14\")\n\n\n\n\n\n\n\nplot_cat_movement(adjusted_cat_distance, \"Zoey\", \"2015-01-07\")\n\n\n\n\n\n\n\nplot_cat_movement(adjusted_cat_distance, \"Franklin\", \"2015-02-25\")\n\n\n\n\n\n\n\n\n\nage_summaries &lt;- merged_summaries_by_cat %&gt;%\n  group_by(`animal-life-stage`) %&gt;%\n  summarize(avg_dist_day_by_age = mean(avg_distance_day),\n            avg_dist_obs_by_age = mean(mean_distance_obs))\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_day_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats Each Day, \\nGrouped by Age\")\n\n\n\n\n\n\n\nggplot(age_summaries, aes(x = `animal-life-stage`, y = avg_dist_obs_by_age)) +\n  geom_col(color = \"#45105b\", fill = \"#9a94bc\") +\n  labs(x = \"Age in Years\", y = \"Average Distance in m\", title = \"Average Distance Traveled By Cats per 3-Min Cycle, \\nGrouped by Age\")"
  }
]